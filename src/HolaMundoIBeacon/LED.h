// -*- mode: c++ -*-

#ifndef LED_H_INCLUIDO
#define LED_H_INCLUIDO

// ----------------------------------------------------------
// RubÃ©n Pardo Casanova
// 2021-09-14
// ----------------------------------------------------------

// ----------------------------------------------------------
// ----------------------------------------------------------
/**
 * N -> esperar()
 *
 * @param tiempo ms a esperar.
 *
 */
void esperar (long tiempo) {
  delay (tiempo);
}

// ----------------------------------------------------------
// ----------------------------------------------------------
class LED {
private:
  int numeroLED;
  bool encendido;
public:

  // .........................................................
  // .........................................................
  /**
   * Constructor para la clase LED
   *
   * @param numero pin donde esta conectado el LED
   *
   */
  LED (int numero)
	: numeroLED (numero), encendido(false)
  {
	pinMode(numeroLED, OUTPUT);
	apagar ();
  }

  // .........................................................
  // .........................................................
  /**
   * encender()
   *
   */
  void encender () {
	digitalWrite(numeroLED, HIGH); 
	encendido = true;
  }

  // .........................................................
  // .........................................................
  /**
   * apagar()
   *
   */
  void apagar () {
	  digitalWrite(numeroLED, LOW);
	  encendido = false;
  }

  // .........................................................
  // .........................................................
  /**
   * alternar()
   *
   */
  void alternar () {
  	if (encendido) {
  	  apagar();
  	} else {
  	  encender ();
  	}
  } // ()

  // .........................................................
  // .........................................................
  /**
   * N -> brillar()
   *
   * @param tiempo ms en el que el LED esta encendido
   *
   */
  void brillar (long tiempo) {
  	encender ();
  	esperar(tiempo); 
  	apagar ();
  }
}; // class

// ----------------------------------------------------------
// ----------------------------------------------------------
// ----------------------------------------------------------
// ----------------------------------------------------------
#endif
